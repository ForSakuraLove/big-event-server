<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pactera.bigevent.mapper.OauthUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.pactera.bigevent.gen.entity.OauthUser">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="third_account_id" property="thirdAccountId" />
        <result column="platform_name" property="platformName" />
        <result column="create_time" property="createTime" />
        <result column="create_user" property="createUser" />
        <result column="update_time" property="updateTime" />
        <result column="update_user" property="updateUser" />
        <result column="version" property="version" />
        <result column="is_deleted" property="isDeleted" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, third_account_id, platform_name, create_time, create_user, update_time, update_user, version, is_deleted
    </sql>
    <select id="getLoginUser" resultType="com.pactera.bigevent.gen.dto.UserWithRolesDto">
        select u.id                      as userId,
               u.username                as username,
               u.status                  as status,
               GROUP_CONCAT(r.role_name) as roleNames
        from oauth_user ou
                 left join user u on ou.user_id = u.id
                 left join user_role_mapping urm
                           on u.id = urm.user_id
                 left join role r
                           on urm.role_id = r.id
        where ou.third_account_id = #{thirdAccountId}
          and ou.platform_name = #{platformName}
        group by u.id
    </select>

</mapper>
